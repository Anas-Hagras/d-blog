name: Extract Social Media Content

on:
  pull_request:
    branches:
      - main
      - master
    paths:
      - "_pages/**/*.md"
  push:
    branches:
      - main
      - master
    paths:
      - "_pages/**/*.md"
      - "social_media/**"

jobs:
  extract-content:
    # Skip if it's a revert commit
    if: ${{ !startsWith(github.event.head_commit.message, 'Revert ') }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2 # Fetch the last 2 commits to detect changes

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Detect new pages
        id: detect
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # Set PR_NUMBER for the detect_new_pages.py script
            echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
            
            # Detect new pages in the PR using PR mode
            python scripts/detect_new_pages.py --pr-mode
            
            # Store new pages in output variable
            NEW_PAGES=$(python scripts/detect_new_pages.py --pr-mode | grep "_pages/" || echo "")
          else
            # Detect new pages between the previous and current commit
            python scripts/detect_new_pages.py HEAD~1 HEAD
            
            # Store new pages in output variable
            NEW_PAGES=$(python scripts/detect_new_pages.py HEAD~1 HEAD | grep "_pages/" || echo "")
          fi

          echo "new_pages<<EOF" >> $GITHUB_OUTPUT
          echo "$NEW_PAGES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Extract social media content for new pages
        if: steps.detect.outputs.new_pages != ''
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          # Process each new page
          echo "${{ steps.detect.outputs.new_pages }}" | while read page; do
            if [ -n "$page" ]; then
              echo "Processing page: $page"
              python scripts/extract_social_media_content.py "$page"
            fi
          done

      - name: Check for changes
        id: check_changes
        run: |
          git add social_media/
          if git diff --staged --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected in social_media directory"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected in social_media directory"
          fi

      - name: Create branch
        if: steps.detect.outputs.new_pages != '' && steps.check_changes.outputs.has_changes == 'true'
        id: branch
        run: |
          # Get the first file from new pages
          FIRST_PAGE=$(echo "${{ steps.detect.outputs.new_pages }}" | head -n 1)

          # Extract page name from the file path
          PAGE_NAME=$(basename "$FIRST_PAGE" .md)

          # Remove date prefix if it exists (YYYY-MM-DD-)
          if [[ $PAGE_NAME =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}- ]]; then
            PAGE_NAME=${PAGE_NAME:11}
          fi

          # Create a new branch for the extracted content with _social_media suffix
          BRANCH_NAME="${PAGE_NAME}_social_media"
          git checkout -b $BRANCH_NAME
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Commit changes
        if: steps.detect.outputs.new_pages != '' && steps.check_changes.outputs.has_changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "Add social media content for new pages"

      - name: Push branch
        if: steps.detect.outputs.new_pages != '' && steps.check_changes.outputs.has_changes == 'true'
        run: |
          # Use a different approach for authentication
          git config --global url."https://${{ secrets.GH_PAT }}@github.com/".insteadOf "https://github.com/"
          git push origin ${{ steps.branch.outputs.branch_name }}

      - name: Create Pull Request
        if: steps.detect.outputs.new_pages != '' && steps.check_changes.outputs.has_changes == 'true'
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          # Create pull request using GitHub CLI instead of the action
          # This avoids the issue with the action trying to push the branch again
          gh pr create \
            --title "Add social media content for new pages" \
            --body "This PR adds social media content for the following new pages:

            ${{ steps.detect.outputs.new_pages }}

            The content will be published to social media platforms when this PR is merged." \
            --base ${{ github.ref_name }} \
            --head ${{ steps.branch.outputs.branch_name }}
